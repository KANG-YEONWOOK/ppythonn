##산술연산자##

a = 8.00           ##나눗셈연산에서 제대로된 값이 나오려면 실수형데이터여야 하므로 
b = 12.00          ##실수형으로 변수 a와 b를 선언한다.

print('a + b =', a + b)     ##'+'는 두 수의 합을 계산한다.
print('a - b =', a - b)     ##'-'는 두 수의 차를 계산한다.
print('a * b =', a * b)     ##'*'는 두 수의 곱을 계산한다.
print('a / b =', a / b)     ##'/'는 두 수의 나눗셈을 계산한다.
print('a // b =', a // b)   ##'//'는 두 수의 나눗셈의 몫을 계산한다.
print('a % b =', a % b)     ##'%'는 두 수의 나눗셈의 나머지를 계산한다.
print('a ** 2 = ', a ** 2)  ##'**'는 두 수의 거듭제곱을 계산한다.


##대입연산자##

c = 9
c += 1
print('c에 3을 더해 저장하면 =>', c)             ##대입연산자를 활용해
c -= 1                                           ##변수에 대입할 수를 계산할
print('c에 3을 빼서 저장하면 =>', c)             ##긴 식을 짧게 줄일 수 있다.
c *= 2
print('c에 2를 곱해서 저장하면 =>', c)
c /= 3
print('c에 3을 나눠서 저장하면 =>', c)
c //= 2
print('c에 c를 2로 나눈 몫을 저장하면 =>', c)
c %= 3
print('c에 c를 3으로 나눈 나머지를 저장하면 =>', c)
c **= 3
print('c에 c의 세제곱을 저장하면 =>', c)


##관계연산자##

a > b                   ##관계연산자는 값들의 비교를 위해 사용되며
a < b                   ##그 값은 불형(True, False)으로 표현된다.
a == b
a != b
a <= b
a >= b


##논리연산자##

if a > 6 and b < 15 :   ##이 문장에서 a가 6이상이고 b가 15이하이면 참을 출력한다.
    print('참')         ##and는 연결된 모든 조건이 True일때만 True를 출력한다.

if a > 6 or b < 8 :     ##이 문장에서 a가 6이상이거나 b가 8이하이면 참을 출력한다.
    print('참')         ##or는 연결된 문장 중 하나만 True이면 True를 출력한다.

if not(a == 12) :       ##이 문장은 a가 12가 아니면 a가 12가 아니라고 출력한다.
    print('a는 12가 아닙니다') ##not은 괄호안의 문장이 False일때 True를 출력한다.


##비트연산자##
                      ##비트연산자는 두 수를 이진수로 변환하여 계산한다
print(8 & 12)         ##&는 둘다 1인 경우에만 1을 출력한다. 8과 12를 논리곱 계산하면
                      ##1000,즉 8이 되므로 8이 출력된다.

print(8 | 12)         ##비트 논리합은 둘 중하나만 1이어도 1을 출력한다. 따라서 12가 출력된다.

print(8 ^ 12)         ##비트 논리적 배타합은 둘이 같으면 0, 다르면 1을 출력한다.
                      ##따라서 4를 출력한다

print(~8+1)           ##비트 부정은 0은 1로, 1은 0으로 바꾸어준다.
                      ##비트 부정 후 1을 더하면 그 값의 2의 보수를 찾을 수 있다.

print(8 << 2)                ##왼쪽 시프트 연산자는 그 수를 2의 n승과 곱한 수를 반환한다.
                             ##여기서는 32가 나온다.
print(8 >> 3)                ##오른쪽 시프트 연산자는 반대로 2의 n승으로 나눈 수를 반환한다.
                             ##여기서는 1이 출력된다.
