##리스트##
List = []                       ##빈 리스트를 하나 생성한다

while len(List) < 10 :          ##len()함수는 리스트의 길이를 알려준다.
    if len(List) < 5 :          ##List에서 앞쪽 다섯 원소는 또 다른 리스트[1,2]
        List.append([1,2])      ##List에서 뒷쪽 다섯 원소는 또 다른 리스트[1,8,9]
    else :                      ##이런식으로 .append를 이용해 이차원리스트를 생성한다
        List.append([1,8,9])

print(List)                     ##생성된 이차원리스트 List확인

Sum1 = List[0][0] + List[0][1]              ##List내부의 앞쪽 리스트의 원소의 합을 구한다.
                                            ##리스트명[n-1]로 리스트의 n번째 원소를 확인할 수 있고
                                            ##이차원리스트는 뒤에[k-1]을 붙여 내부리스트의 k번째
                                            ##원소를 확인할 수 있다.
Sum2 = List[5][0] + List[5][1] + List[5][2]

print('앞쪽 리스트의 내부값의 합 : %d' %(Sum1))
print('뒷쪽 리스트의 내부값의 합 : %d' %(Sum2))

a = [1,2,3]
print (a)
a[1] = 200              ##이처럼 리스트 내부 원소를 지정해 변경하는 것도 가능하다.
print (a)

b = [i for i in range(0,9,2)]  ##또한 리스트 내부에 함수를 사용해 내용을 직접입력하지 않는 것도 가능하다.
print(b)                       ##여기서는 0,2,4,6,8이 리스트에 입력,출력된다.

##튜플##
Tuple = (8,9,10,11,12); Tuple  ##이런방식으로 튜플을 생성할 수 있다.
print(Tuple)
print(Tuple[1:3])              ##리스트처럼 튜플도 내부원소를 지정해 확인할 수 있다.
print(list(Tuple))

##딕셔너리##

dic = {'key1' : '썬', 'key2' : '파', 'key3' : '이'}  ##{}안에 키와 그에 대응하는 값으로 딕셔너리를 생성할 수 있다.
print(dic['key2'], dic['key3'], dic['key1'])         ##딕셔너리[키]형식으로 딕셔너리 내부의 값을 출력할 수 있다.
